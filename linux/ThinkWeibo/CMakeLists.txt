cmake_minimum_required(VERSION 2.4)
project(ThinkWeibo)

ADD_DEFINITIONS(-ggdb3)
ADD_DEFINITIONS(-Wall)
#ADD_DEFINITIONS(-lcurl)
#ADD_DEFINITIONS(-loauth)

INCLUDE(FindGLIB2.cmake)
INCLUDE(FindOAuth.cmake)
INCLUDE(FindJansson.cmake)
INCLUDE(FindPkgConfig)

pkg_check_modules(GLIB2 REQUIRED glib-2.0)
IF (GLIB2_FOUND)
    MESSAGE ("Glib found")
    INCLUDE_DIRECTORIES(${GLIB2_INCLUDE_DIRS})
    MESSAGE (${GLIB2_INCLUDE_DIRS})
    #LINK_DIRECTORIES(${GLIB2_LIBRARIES})
    #LINK_DIRECTORIES(${GTHREAD2_LIBRARIES})
ELSE (GLIB2_FOUND)
    MESSAGE ("Glib not found")
ENDIF (GLIB2_FOUND)

IF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
    ADD_DEFINITIONS(-fPIC)
ELSE (CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
ENDIF(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")


add_executable(ThinkWeibo main.c)

ADD_SUBDIRECTORY(log)
INCLUDE_DIRECTORIES(log)

ADD_SUBDIRECTORY(weiboapi)
INCLUDE_DIRECTORIES(weiboapi)

ADD_SUBDIRECTORY(utils)
INCLUDE_DIRECTORIES(utils)

ADD_SUBDIRECTORY(uploader)
#ADD_SUBDIRECTORY(java_test)
ADD_SUBDIRECTORY(JUploader)

TARGET_LINK_LIBRARIES(ThinkWeibo ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeibo ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeibo ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeibo pthread log weiboapi curl utils)

ADD_EXECUTABLE(ThinkWeiboLogin ThinkWeiboLogin.c)
TARGET_LINK_LIBRARIES(ThinkWeiboLogin ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeiboLogin ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeiboLogin ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeiboLogin pthread log weiboapi curl utils)

ADD_EXECUTABLE(ThinkWeiboGetFriendFeeds ThinkWeiboGetFriendFeeds.c)
TARGET_LINK_LIBRARIES(ThinkWeiboGetFriendFeeds ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeiboGetFriendFeeds ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeiboGetFriendFeeds ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(ThinkWeiboGetFriendFeeds pthread log weiboapi curl utils)

ADD_EXECUTABLE(downloader downloader.c)
TARGET_LINK_LIBRARIES(downloader ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(downloader ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(downloader ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(downloader pthread log weiboapi curl utils)

ADD_EXECUTABLE(atme atme.c)
TARGET_LINK_LIBRARIES(atme ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(atme ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(atme ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(atme pthread log weiboapi curl utils)

ADD_EXECUTABLE(my_weibo my_weibo.c)
TARGET_LINK_LIBRARIES(my_weibo ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(my_weibo ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(my_weibo ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(my_weibo pthread log weiboapi curl utils)

ADD_EXECUTABLE(get_my_path get_my_path.c)
TARGET_LINK_LIBRARIES(get_my_path ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(get_my_path ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(get_my_path ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(get_my_path pthread log weiboapi curl utils)

ADD_EXECUTABLE(weibo_uploader weibo_uploader.c)
TARGET_LINK_LIBRARIES(weibo_uploader ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(weibo_uploader ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(weibo_uploader ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(weibo_uploader pthread log weiboapi curl utils)

ADD_EXECUTABLE(delete_weibo delete_weibo.c)
TARGET_LINK_LIBRARIES(delete_weibo ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(delete_weibo ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(delete_weibo ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(delete_weibo pthread log weiboapi curl utils)

ADD_EXECUTABLE(weibo_update weibo_update.c)
TARGET_LINK_LIBRARIES(weibo_update ${GLIB2_LIBRARIES} ${GTHREAD2_LIBRARIES})
TARGET_LINK_LIBRARIES(weibo_update ${LIBOAUTH_LIBRARIES})
TARGET_LINK_LIBRARIES(weibo_update ${LIBJANSSON_LIBRARIES})
TARGET_LINK_LIBRARIES(weibo_update pthread log weiboapi curl utils)
